---
name: check-requirements

on:
  schedule:
    - cron: "0 4 * * 1-5"
  workflow_dispatch:

env:
  SLACK_CHANNEL: "borg_github_internal"
  DEVEL_BRANCH_NAME: "devel-borg"
  REQUIREMENTS_FILE: "./requirements_stable.txt"


permissions:
  contents: write

jobs:

  main_workflow:
    runs-on: core
    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}
      new_versions: ${{ steps.check_new_versions.outputs.new_versions}}
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.DEVEL_BRANCH_NAME }}

      - name: Cache Ansible Collections
        id: ansible-collections-cache
        uses: actions/cache@v4
        with:
          path: ~/.ansible/collections
          key: ansible-collections-global-${{ runner.os }}-${{ hashFiles('./ansible_required_collections.yml') }}
          restore-keys: |
            ansible-collections-global-${{ runner.os }}-
            ansible-collections-${{ runner.os }}-

      # Attempting to install packages with --dry-run to check for new versions
      - name: "Check new packages versions "
        id: check_new_versions
        shell: bash
        run: |
          GREEN='\033[0;32m'
          python3 -m virtualenv ${{ github.workspace }}/test_venv
          . ${{ github.workspace }}/test_venv/bin/activate
          echo "VIRTUAL_ENV=${{ github.workspace }}/test_venv" >> $GITHUB_ENV
          echo "${{ github.workspace }}/test_venv/bin" >> $GITHUB_PATH
          pip install --dry-run -r ./requirements.txt | \
          grep "Would install" | sed 's/^Would install //' | \
          tr ' ' '\n' | rev | sed 's/-/==/' | \
          rev > ./dry_run_requirements.txt
          echo "* A list just instaled requirements:"
          cat ./dry_run_requirements.txt | sort
          echo "* Comparing changes between requirements files:"
          if !(diff <(sort ./requirements_stable.txt) <(sort ./dry_run_requirements.txt) >> /dev/null); then
              echo -e "${GREEN}There are changes"
              echo "new_versions=yes" >> $GITHUB_OUTPUT
          else
              echo -e "There are no changes"
          fi

      - uses: ./.github/actions/generate-matrix
        if: success()
        id: get-matrix
        with:
          platform: 'target/cpanel'
          service_user_token: ${{ secrets.SERVICE_USER_TOKEN }}

  execute_test:
    needs: main_workflow
    if: needs.main_workflow.outputs.matrix && needs.main_workflow.outputs.new_versions
    uses: ./.github/workflows/_execute_test.yml
    with:
      matrix: ${{ needs.main_workflow.outputs.matrix }}
      ansible_strategy_plugins: 'plugins/strategy_plugins/mitogen-0.3.18/ansible_mitogen/plugins/strategy'
      virtual_env: true
      latest_versions: false
      requirements: "./requirements.txt"
      collections: "./ansible_required_collections.yml"
      branch_name: "devel-borg"

  check_changes:
    needs: execute_test
    if: success() && needs.execute_test.outputs.installed_requirements != ''
    runs-on: core
    outputs:
      changes_present: ${{ steps.check_changes.outputs.changes_present }}
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.DEVEL_BRANCH_NAME }}

      - name: "Check changes for requirements file"
        id: check_changes
        shell: bash
        run: |
            echo "${{ needs.execute_test.outputs.installed_requirements }}" > ${{env.REQUIREMENTS_FILE}}
            if !(git diff --quiet ${{env.REQUIREMENTS_FILE}}); then
              echo "changes_present=yes" >> $GITHUB_OUTPUT
              git diff ${{env.REQUIREMENTS_FILE}}
            fi

  fail_message:
    needs: execute_test
    if: ${{ failure() }}
    runs-on: core
    steps:

      - name: "Show packages difference"
        id: show_packages_difference
        if: needs.execute_test.outputs.installed_requirements != ''
        shell: bash
        run: |
          echo "${{ needs.execute_test.outputs.installed_requirements }}" > ${{env.REQUIREMENTS_FILE}}
          if !(git diff --quiet ${{env.REQUIREMENTS_FILE}}); then
            git diff --unified=0 ${{env.REQUIREMENTS_FILE}}
            echo "GIT_DIFF<<EOF" >> $GITHUB_OUTPUT
            echo -n '```' >> $GITHUB_OUTPUT
            git --no-pager diff -U0 ${{env.REQUIREMENTS_FILE}} | sed -n '/^@@/,$p' | sed G >> $GITHUB_OUTPUT
            echo '```' >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: "Send Slack message about failed test migration run"
        id: send-failure-test-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":red_circle:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Update pip requirements"
                    short: false
                    value: "Something went wrong during a test or environment setup. Check it please"
                  - value: "${{ steps.show_packages_difference.outputs.GIT_DIFF}}"
                  - value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Action log>"

  push_changes:
    needs:
      - execute_test
      - check_changes
    if: needs.check_changes.outputs.changes_present != ''
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.DEVEL_BRANCH_NAME }}

      - name: "Push new requirements"
        id: push-new-requirements
        shell: bash
        run: |
            echo "${{needs.execute_test.outputs.installed_requirements}}" > ${{env.REQUIREMENTS_FILE}}
            echo "GIT_DIFF<<EOF" >> $GITHUB_OUTPUT
            echo -n '```' >> $GITHUB_OUTPUT
            git --no-pager diff -U0 ${{env.REQUIREMENTS_FILE}} | sed -n '/^@@/,$p' | sed G >> $GITHUB_OUTPUT
            echo '```' >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add ${{env.REQUIREMENTS_FILE}}
            git commit -m "[evn] - Updated pip requirements"
            git push origin ${{ env.DEVEL_BRANCH_NAME }}

      - name: "Send Slack message about failed push to devel-borg"
        if: failure()
        id: send-failure-push-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":red_circle:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Update pip requirements"
                    short: false
                    value: "Could not push a new commit to devel-borg"
                  - value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Action log>"

      - name: "Send Slack message about success push to devel-borg"
        if: success()
        id: send-success-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":python-5622:"
            attachments:
              - color: "00ff00"
                fields:
                  - title: "Update pip requirements"
                    short: false
                    value: "File requirements_stable.txt was successfully updated"
                  - value: "${{ steps.push-new-requirements.outputs.GIT_DIFF}}"
                  - value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Action log>"
