---
# We need branch protection rule for all below to have purpose

env:
  SEARCH_PATTERN: "[_AUTO_] - pull-request"
  MASTER_BRANCH_NAME: "master"
  STAGING_BRANCH_NAME: "staging"
  SLACK_CHANNEL: "borg_github_internal"

permissions:
  pull-requests: write
  contents: write

name: "Handle merge to master"
on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}

jobs:
  auto_merge_master:
    name: "Do an auto-merge to master"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      # First poll if any auto PRs to master exist and wait for them to close automatically (edge case)
      - name: Check if any auto pull requests to master exist
        id: poll-prs
        uses: actions/github-script@v6
        with:
          script: |
            const TIMEOUT = 5 * 60 * 1000; // 5 minutes in milliseconds
            const INTERVAL = 15 * 1000; // 15 seconds in milliseconds
            const START_TIME = Date.now();

            console.log("Polling for pull requests...");

            while (true) {
              const elapsedTime = Date.now() - START_TIME;

              if (elapsedTime > TIMEOUT) {
                console.log("Timeout reached while waiting for another PR to get closed");
                throw new Error("Timeout reached while waiting for another PR to get closed");
              }

              const pullRequests = ( await github.rest.pulls.list({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'open'
              })).data.filter(pr => pr.base.ref === '${{ env.MASTER_BRANCH_NAME }}' && pr.title.includes('${{ env.SEARCH_PATTERN }}'))

              if (pullRequests.length === 0) {
                console.log("No open pull requests found. We can proceed further");
                break;
              }
              await new Promise(resolve => setTimeout(resolve, INTERVAL));
            }

      - name: "Send Slack message about stuck PR to master"
        if: failure() && steps.poll-prs.outcome != 'skipped'
        id: send-timeout-message-stuck
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":attn:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Message"
                    short: false
                    value: "Could not open PR to master because there is other PR stuck, not closing it for investigation"
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Handle merge to master>"


      # 'Allow GitHub Actions to create and approve pull requests' has to be enabled in repository Settings > Actions > General (most bottom line)
      - name: "Open PR to master"
        id: open-pr-master
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const createPr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: "staging",
                base: '${{ env.MASTER_BRANCH_NAME}}',
                title: '${{ env.SEARCH_PATTERN }}',
              });
              require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `prNumber=${JSON.stringify(createPr.data.number)}\n`);

              } catch (error) {
                  require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `createPrStatus=${JSON.stringify(error.status)}\n`);
                  console.log(error)
                  throw new Error("PR creation failed: " + error);
              }

      # We need double 'if' so it executes only for fail of 'Open PR to master' task and not if previous tasks failed
      - name: "Send Slack message about failed opening PR to master"
        if: failure() && steps.open-pr-master.outcome != 'skipped'
        id: send-failure-message-open
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":red_circle:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Message"
                    short: false
                    value: "Could not open a PR to master, status code: ${{ steps.open-pr-master.outputs.createPrStatus }} :rain_cloud:
                            Click on Actions URL to view full log"
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Failed opening PR to master>"

      - name: "Merge PR to master"
        id: merge-pr-master
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.SERVICE_USER_TOKEN }}
          script: |
            const TIMEOUT = 5 * 60 * 1000; // 5 minutes in milliseconds
            const INTERVAL = 15 * 1000; // 15 seconds in milliseconds
            const START_TIME = Date.now();
            let isMergeable = false

            console.log("Waiting for PR to become mergeable...");

              while (true) {

                const elapsedTime = Date.now() - START_TIME;

                if (elapsedTime > TIMEOUT) {
                  console.log("Timeout reached while waiting for PR to become mergeable");
                  require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `isMergeable=${JSON.stringify(isMergeable)}\n`);
                  console.log(pullRequest)
                  throw new Error("Timeout reached while waiting for PR to become mergeable");
                }

                const pullRequest = await github.rest.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: '${{ steps.open-pr-master.outputs.prNumber }}'
                });

                if (pullRequest.data.mergeable === true) {
                  console.log("PR is mergeable. We can proceed further.");
                  isMergeable = true
                  break;
                }
                await new Promise(resolve => setTimeout(resolve, INTERVAL));
              }
              require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `isMergeable=${JSON.stringify(isMergeable)}\n`);

            if (isMergeable === true) {
              const mergePr = await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: '${{ steps.open-pr-master.outputs.prNumber }}',
                })
            }

      - name: "Send Slack message about timeout waiting for PR to become mergeable"
        if: failure() && steps.merge-pr-master.outcome != 'skipped' && steps.merge-pr-master.outputs.isMergeable == 'false'
        id: send-failure-message-timeout
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":attn:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Message"
                    short: false
                    value: "Workflow failed while waiting for PR to become mergeable, please check the issue"
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Something bad happened...>"

      - name: "Send Slack message about failed merge"
        if: failure() && steps.merge-pr-master.outcome != 'skipped' && steps.merge-pr-master.outputs.isMergeable == 'true'
        id: send-failure-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":red_circle:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Message"
                    short: false
                    value: "Auto merge to master has failed, please check the logs"
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Something bad happened...>"

      - name: "Send Slack message about successful merge"
        if: success()
        id: send-success-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":check_green:"
            attachments:
              - color: "00ff00"
                fields:
                  - title: "Message"
                    short: false
                    value: "PR to master has been successfuly merged"
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Congratulations>"

  close_invalid_prs:
    name: "Close PRs created to master by humans"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Fetch and close manual PRs to master if any
        id: fetch-and-close-invalid-prs
        uses: actions/github-script@v6
        with:
          script: |
            let invalidPrExists = false;
            const pullRequests = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
            });

            const invalidMasterPrs = pullRequests.data.filter(pr =>
                pr.base.ref === '${{ env.MASTER_BRANCH_NAME }}' && !pr.title.includes('${{ env.SEARCH_PATTERN }}'));

            if (invalidMasterPrs.length > 0) {
              invalidPrExists = true;
              github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: invalidMasterPrs[0].number,
                state: 'closed'
              });
            }

            require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `invalidPrExists=${JSON.stringify(invalidPrExists)}\n`);

      - name: Send Slack message about closed PR to master
        id: send-slack-message-invalid-pr
        if: steps.fetch-and-close-invalid-prs.outputs.invalidPrExists == 'true'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":attn:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Message"
                    short: false
                    value: "Humans are not allowed to open PRs to master! Closing..."
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Link>"

      - name: Send Slack message about failing closing PR to master
        id: send-slack-message
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_API_TOKEN }}
          payload: |
            channel: ${{ env.SLACK_CHANNEL }}
            text: ":attn:"
            attachments:
              - color: "FF0000"
                fields:
                  - title: "Message"
                    short: false
                    value: "Something went wrong while closing invalid PR to master, please check manually"
                  - title: "Actions URL"
                    short: false
                    value: "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Actions link>"
